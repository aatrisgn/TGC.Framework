name: Nightly build

on:
  schedule:
  - cron: '0 5 * * *'
  # configure manual trigger
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
    - '.github/workflows/NightlyBuild.yml'
    - 'src/**'
  pull_request:
    branches: ["main"]
    paths:
    - '.github/workflows/NightlyBuild.yml'

jobs:
  project_matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        csprojects: 
          [
            # {folderPath: "AzureTableStorage", project: "TGC.AzureTableStorage"},
            # {folderPath: "CSharpCodingStandards", project: "TGC.CSharpCodingStandards"},
            # {folderPath: "AzureTableStorage", project: "TGC.AzureTableStorage"},
            # src/AzureTableStorage/TGC.AzureTableStorage/TGC.AzureTableStorage,
            # src/CSharpCodingStandards/TGC.CSharpCodingStandards/TGC.CSharpCodingStandards,
            # src/EFCoreRepositories/TGC.EFCoreRepositories/TGC.EFCoreRepositories
            AzureTableStorage,
            CSharpCodingStandards,
            EFCoreRepositories
          ]    
    steps:
    # We need this because GitHub needs to clone the branch to pipeline
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK 6.0.x
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x    

    - name: Restore dependencies
      run: dotnet restore src/${{ matrix.csprojects }}/TGC.${{ matrix.csprojects }}/TGC.${{ matrix.csprojects }}.csproj

    - name: Build
      run: dotnet build src/${{ matrix.csprojects }}/TGC.${{ matrix.csprojects }}.Tests/TGC.${{ matrix.csprojects }}.Tests.csproj --no-restore

    - name: Test
      run: dotnet test ${{ matrix.csprojects }}.Tests.csproj --no-restore

    - name: Pack
      run: dotnet pack src/${{ matrix.csprojects }}/TGC.${{ matrix.csprojects }}/TGC.${{ matrix.csprojects }}.csproj
